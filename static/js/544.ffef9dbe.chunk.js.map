{"version":3,"file":"static/js/544.ffef9dbe.chunk.js","mappings":"sLAEaA,E,QAAeC,EAAAA,IAAH,8E,SCKzB,EAJc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,OAAO,SAACF,EAAD,UAAeE,M,4FCDXC,EAAOF,EAAAA,GAAAA,GAAH,yCAIJG,GAASH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,0Q,mBCHJ,SAASK,EAAT,GAAmC,IAAdC,EAAa,EAAbA,GAAIC,EAAS,EAATA,MAChCC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACP,EAAD,WACE,SAACC,EAAD,CAAQO,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMJ,GAA5C,SACGD,KAFMD,GCLR,IAAMO,EAAOb,EAAAA,GAAAA,GAAH,0CCEF,SAASc,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OACnC,OACE,SAACF,EAAD,UACGE,EAAOC,KAAI,gBAAGV,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOU,EAAd,EAAcA,YAAd,OACV,SAACZ,EAAD,CAAoBC,GAAIA,EAAIC,MAAOA,EAAOW,OAAQD,GAAlCX,U,oJCDT,SAASa,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOL,EAAP,KAAeM,EAAf,KACA,GAA4BD,EAAAA,EAAAA,UAASE,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KA0BA,OAxBAC,EAAAA,EAAAA,YAAU,WACRH,EAAUF,EAAAA,EAAAA,SAIRM,EAAAA,KACGC,MAAK,SAAAC,GACJT,EAAUS,EAAKC,SACfP,EAAUF,EAAAA,EAAAA,UAEkB,IAAxBQ,EAAKC,QAAQC,SACfN,EACE,4EAEFF,EAAUF,EAAAA,EAAAA,cAGbW,OAAM,SAAAR,GACLC,EAASD,GACTD,EAAUF,EAAAA,EAAAA,eAGf,KAGD,2BACE,0BACGC,IAAWD,EAAAA,EAAAA,UAAkB,SAAC,IAAD,IAC7BC,IAAWD,EAAAA,EAAAA,WAAmB,SAAC,IAAD,CAAOrB,QAASwB,IAC9CF,IAAWD,EAAAA,EAAAA,WAAmB,SAAC,IAAD,CAAYP,OAAQA,W,0MCvC3DmB,IAAAA,SAAAA,QAAyB,6BAEzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,IAAAA,IAAA,wCAA2CC,IAD7D,cACCE,EADD,OAELC,QAAQC,IAAIF,EAASP,MAFhB,kBAGEO,EAASP,MAHX,kEAMA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAA4BlC,GAA5B,uFACkB4B,IAAAA,IAAA,mBAAsB5B,EAAtB,oBAAoC6B,IADtD,cACCE,EADD,yBAEEA,EAASP,MAFX,kEAIA,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAA+BnC,GAA/B,uFACkB4B,IAAAA,IAAA,mBAAsB5B,EAAtB,4BAA4C6B,IAD9D,cACCE,EADD,yBAEEA,EAASP,MAFX,kEAIA,SAAeY,EAAtB,+CAAO,OAAP,oBAAO,WAA+BpC,GAA/B,uFACkB4B,IAAAA,IAAA,mBAAsB5B,EAAtB,4BAA4C6B,IAD9D,cACCE,EADD,yBAEEA,EAASP,MAFX,kEAKA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBV,IAAAA,IAAA,kCACMC,EADN,kBACuBS,EADvB,yBADlB,cACCP,EADD,yBAKEA,EAASP,MALX,oE,mBCnBP,IANe,CACbe,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU","sources":["components/Error/Error.styled.jsx","components/Error/Error.jsx","components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MoviesList.styled.jsx","components/MovieList/MoviesList.jsx","pages/Home/Home.jsx","servis/Api.jsx","servis/Const.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorWrapper = styled.div`\n  margin: 0 auto;\n  font-size: 20px;\n  color: red;\n`;\n","import PropTypes from 'prop-types';\nimport { ErrorWrapper } from './Error.styled';\n\nconst Error = ({ message }) => {\n  return <ErrorWrapper>{message}</ErrorWrapper>;\n};\n\nexport default Error;\n\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  padding: 5px;\n`;\n\nexport const LinkTo = styled(Link)`\n  display: inline-block;\n  text-decoration: none;\n  font-weight: 500;\n  font-size: 16px;\n  color: black;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover:not(.active),\n  :focus:not(.active) {\n    color: #2196f3;\n  }\n`;\n","import { Item, LinkTo } from './MovieItem.styled';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nexport default function MovieItem({ id, title }) {\n  const location = useLocation();\n  return (\n    <Item key={id}>\n      <LinkTo to={`/movies/${id}`} state={{ from: location }}>\n        {title}\n      </LinkTo>\n    </Item>\n  );\n}\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 10px;\n`;\n","import MovieItem from '../MovieItem/MovieItem';\nimport PropTypes from 'prop-types';\nimport { List } from './MoviesList.styled';\n\nexport default function MoviesList({ movies }) {\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => (\n        <MovieItem key={id} id={id} title={title} poster={poster_path} />\n      ))}\n    </List>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import * as Api from 'servis/Api';\nimport { useState, useEffect } from 'react';\nimport MoviesList from 'components/MovieList/MoviesList';\nimport Loader from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport Status from '../../servis/Const';\n\nexport default function Home() {\n  const [movies, setMovies] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    getTrendingMovies();\n\n    function getTrendingMovies() {\n      Api.getTrendingMovies()\n        .then(data => {\n          setMovies(data.results);\n          setStatus(Status.RESOLVED);\n\n          if (data.results.lenght === 0) {\n            setError(\n              'Sorry, there are no movies matching your search query. Please try again.'\n            );\n            setStatus(Status.REJECTED);\n          }\n        })\n        .catch(error => {\n          setError(error);\n          setStatus(Status.REJECTED);\n        });\n    }\n  }, []);\n\n  return (\n    <main>\n      <ul>\n        {status === Status.PENDING && <Loader />}\n        {status === Status.REJECTED && <Error message={error} />}\n        {status === Status.RESOLVED && <MoviesList movies={movies} />}\n      </ul>\n    </main>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nconst API_KEY = '6e83d9f645a92ff232bed757caa274bd';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(`/3/trending/movie/day?api_key=${API_KEY}`);\n  console.log(response.data);\n  return response.data;\n}\n\nexport async function getMovieById(id) {\n  const response = await axios.get(`/3/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n}\nexport async function getMovieCredits(id) {\n  const response = await axios.get(`/3/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n}\nexport async function getMovieReviews(id) {\n  const response = await axios.get(`/3/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function getMoviesByQuery(searchQuery) {\n  const response = await axios.get(\n    `/3/search/movie?api_key=${API_KEY}&query=${searchQuery}&include_adult=false`\n  );\n\n  return response.data;\n}\n","const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\nexport default Status;\n"],"names":["ErrorWrapper","styled","message","Item","LinkTo","Link","MovieItem","id","title","location","useLocation","to","state","from","List","MoviesList","movies","map","poster_path","poster","Home","useState","setMovies","Status","status","setStatus","error","setError","useEffect","Api","then","data","results","lenght","catch","axios","API_KEY","getTrendingMovies","response","console","log","getMovieById","getMovieCredits","getMovieReviews","getMoviesByQuery","searchQuery","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}