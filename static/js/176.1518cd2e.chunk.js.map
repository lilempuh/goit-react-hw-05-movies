{"version":3,"file":"static/js/176.1518cd2e.chunk.js","mappings":"sLAEaA,E,QAAeC,EAAAA,IAAH,8E,SCKzB,EAJc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,OAAO,SAACF,EAAD,UAAeE,M,oJCFT,SAASC,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QACpC,OACE,wBACGA,EAAQC,KAAI,SAAAC,GAAM,OACjB,2BACE,yCAAeA,EAAOC,WACtB,uBAAID,EAAOE,YAFJF,EAAOG,SCET,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAASC,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BH,EAAAA,EAAAA,YAA9B,eAAOT,EAAP,KAAgBa,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KA0BA,OAxBAC,EAAAA,EAAAA,YAAU,WACRJ,EAAUF,EAAAA,EAAAA,SAKRO,EAAAA,GAAoBV,GACjBW,MAAK,SAAAC,GACJN,EAAWM,EAAKC,SAChBR,EAAUF,EAAAA,EAAAA,UAEkB,IAAxBS,EAAKC,QAAQC,SACfR,EAAW,IACXE,EAAS,8CACTH,EAAUF,EAAAA,EAAAA,cAGbY,OAAM,SAAAR,GACLC,EAASD,GACTF,EAAUF,EAAAA,EAAAA,eAGf,CAACH,KAGF,2BACGI,IAAWD,EAAAA,EAAAA,UAAkB,SAACa,EAAA,EAAD,IAC7BZ,IAAWD,EAAAA,EAAAA,WAAmB,SAACc,EAAA,EAAD,CAAO1B,QAASgB,IAC9CH,IAAWD,EAAAA,EAAAA,WAAmB,SAACX,EAAD,CAAaC,QAASA,S,0MCxC3DyB,IAAAA,SAAAA,QAAyB,6BAEzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,IAAAA,IAAA,wCAA2CC,IAD7D,cACCE,EADD,OAELC,QAAQC,IAAIF,EAAST,MAFhB,kBAGES,EAAST,MAHX,kEAMA,SAAeY,EAAtB,+CAAO,OAAP,oBAAO,WAA4B1B,GAA5B,uFACkBoB,IAAAA,IAAA,mBAAsBpB,EAAtB,oBAAoCqB,IADtD,cACCE,EADD,yBAEEA,EAAST,MAFX,kEAIA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAA+B3B,GAA/B,uFACkBoB,IAAAA,IAAA,mBAAsBpB,EAAtB,4BAA4CqB,IAD9D,cACCE,EADD,yBAEEA,EAAST,MAFX,kEAIA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAA+B5B,GAA/B,uFACkBoB,IAAAA,IAAA,mBAAsBpB,EAAtB,4BAA4CqB,IAD9D,cACCE,EADD,yBAEEA,EAAST,MAFX,kEAKA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBV,IAAAA,IAAA,kCACMC,EADN,kBACuBS,EADvB,yBADlB,cACCP,EADD,yBAKEA,EAAST,MALX,oE,mBCnBP,IANe,CACbiB,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU","sources":["components/Error/Error.styled.jsx","components/Error/Error.jsx","components/ReviewsItem/ReviewsItem.jsx","pages/Reviews/Reviews.jsx","servis/Api.jsx","servis/Const.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorWrapper = styled.div`\n  margin: 0 auto;\n  font-size: 20px;\n  color: red;\n`;\n","import PropTypes from 'prop-types';\nimport { ErrorWrapper } from './Error.styled';\n\nconst Error = ({ message }) => {\n  return <ErrorWrapper>{message}</ErrorWrapper>;\n};\n\nexport default Error;\n\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function ReviewsItem({ reviews }) {\n  return (\n    <ul>\n      {reviews.map(review => (\n        <li key={review.id}>\n          <p>{`Author: ${review.author}`}</p>\n          <p>{review.content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nReviewsItem.propTypes = {\n  reviews: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import * as Api from 'servis/Api';\nimport Status from '../../servis/Const';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport ReviewsItem from 'components/ReviewsItem/ReviewsItem';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [status, setStatus] = useState(Status.IDLE);\n  const [reviews, setReviews] = useState();\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n\n    getMovieReviews();\n\n    function getMovieReviews() {\n      Api.getMovieReviews(movieId)\n        .then(data => {\n          setReviews(data.results);\n          setStatus(Status.RESOLVED);\n\n          if (data.results.length === 0) {\n            setReviews([]);\n            setError('We do not have any reviews for this movie.');\n            setStatus(Status.REJECTED);\n          }\n        })\n        .catch(error => {\n          setError(error);\n          setStatus(Status.REJECTED);\n        });\n    }\n  }, [movieId]);\n\n  return (\n    <div>\n      {status === Status.PENDING && <Loader />}\n      {status === Status.REJECTED && <Error message={error} />}\n      {status === Status.RESOLVED && <ReviewsItem reviews={reviews} />}\n    </div>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nconst API_KEY = '6e83d9f645a92ff232bed757caa274bd';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(`/3/trending/movie/day?api_key=${API_KEY}`);\n  console.log(response.data);\n  return response.data;\n}\n\nexport async function getMovieById(id) {\n  const response = await axios.get(`/3/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n}\nexport async function getMovieCredits(id) {\n  const response = await axios.get(`/3/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n}\nexport async function getMovieReviews(id) {\n  const response = await axios.get(`/3/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function getMoviesByQuery(searchQuery) {\n  const response = await axios.get(\n    `/3/search/movie?api_key=${API_KEY}&query=${searchQuery}&include_adult=false`\n  );\n\n  return response.data;\n}\n","const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\nexport default Status;\n"],"names":["ErrorWrapper","styled","message","ReviewsItem","reviews","map","review","author","content","id","Reviews","movieId","useParams","useState","Status","status","setStatus","setReviews","error","setError","useEffect","Api","then","data","results","length","catch","Loader","Error","axios","API_KEY","getTrendingMovies","response","console","log","getMovieById","getMovieCredits","getMovieReviews","getMoviesByQuery","searchQuery","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}